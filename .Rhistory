getwd() #the directory where the script is saved
setwd('./EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
getwd() #the directory where the script is saved
setwd('./EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
setwd('../EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
source("../EPA_Events_Report_TJ_LLCW_Scripts/function_calc_Q_mannings.R") #functions are saved in script directory
source("../EPA_Events_Report_TJ_LLCW_Scripts/function_calc_total_Q_mm.R") #functions are saved in script directory
source('../EPA_Events_Report_TJ_LLCW_Scripts/figure_2.04_ibwc_ratingcurve.R') #functions are saved in script directory
source('../EPA_Events_Report_TJ_LLCW_Scripts/figure_2.04_ibwc_ratingcurve.R') #functions are saved in script directory
source('../EPA_Events_Report_TJ_LLCW_Scripts/calculate.total.Q.mm ') #functions are saved in script directory
source('../EPA_Events_Report_TJ_LLCW_Scripts/function_calculate.total.Q.mm ') #functions are saved in script directory
source('../EPA_Events_Report_TJ_LLCW_Scripts/function_calc_total_Q_mm.R ') #functions are saved in script directory
source("../EPA_Events_Report_TJ_LLCW_Scripts/figure_2.0_storm1_PT_2014_03_01_KTedits04172017.R")
source("../EPA_Events_Report_TJ_LLCW_Scripts/figure_2.02_storm1_PT_2014_03_01_KTedits04172017.R")
source("../EPA_Events_Report_TJ_LLCW_Scripts/figure_2.09_storm3_PT_2015_05_15_KTedits04202017.R")
table.3.3.ssc = read.csv("summary_table.3.3.csv") #table with both IBWC and PT data
precip = read.csv("climate_daily_IB_Napo.csv")
flist = c("figure_2.02_storm1_PT_2014_03_01_KTedits04172017.R",
"figure_2.07_storm2_PT_2015_03_01_KTedits04202017.R",
"figure_2.09_storm3_PT_2015_05_15_KTedits04202017.R",
"figure_2.011_storm4_PT_2015_09_15_KTedits04202017.R" ,
"figure_2.13_storm5_PT_2016_01_04_KTedits04172017.R" ,
"figure_2.15_storm6_PT_2016_03b_KTedits04172017.R" ,
"figure_2.17_storm7_PT_2016_04_KTedits04172017.R",
"figure_2.18_storm8_IBWC_Visual_2017_01_KTedits04172017.R",
"figure_2.19_storm9_IBWC_visual_2017_02_KTedits05012017.R",
"figure_2.20_storm10_IBWC_visual_2017_0227_KTedits05012017.R")
summary.out.PT.IBWC = data.frame(matrix(nrow=1, ncol=8)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(summary.out.PT.IBWC) <- c("date", "total.precip.mm", "PT.peak.q.obs.cms", "IBWC.peak.q.obs.cms", "PT.total.q.obs.mm", "IBWC.total.q.obs.mm", "event", "source")
summary.out.gooddataonly =  data.frame(matrix(nrow=1, ncol=6))
names(summary.out.gooddataonly) <- c("date", "total.precip.mm", "peak.q.obs.cms", "total.q.obs.mm", "event", "source")
for (i in 1:length(flist)) {
source(paste(script.dir,flist[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
summary.out.PT.IBWC = rbind(summary.out.PT.IBWC, obs.summary.PT.IBWC)
summary.out.gooddataonly = rbind(summary.out.gooddataonly, obs.summary) #only the usable data (A rating)
}
script.dir= '../EPA_Events_Report_TJ_LLCW_Scripts'
script.dir
script.dir= '../EPA_Events_Report_TJ_LLCW_Scripts/' #directory where scripts are saved
i=1
source(paste(script.dir,flist[i], sep = ""))
summary.out.PT.IBWC = rbind(summary.out.PT.IBWC, obs.summary.PT.IBWC)
summary.out.PT.IBWC
summary.out.gooddataonly = rbind(summary.out.gooddataonly, obs.summary) #only the usable data (A rating)
summary.out.gooddataonly
summary.out.PT.IBWC = data.frame(matrix(nrow=1, ncol=8)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(summary.out.PT.IBWC) <- c("date", "total.precip.mm", "PT.peak.q.obs.cms", "IBWC.peak.q.obs.cms", "PT.total.q.obs.mm", "IBWC.total.q.obs.mm", "event", "source")
summary.out.gooddataonly =  data.frame(matrix(nrow=1, ncol=6))
names(summary.out.gooddataonly) <- c("date", "total.precip.mm", "peak.q.obs.cms", "total.q.obs.mm", "event", "source")
for (i in 1:length(flist)) {
source(paste(script.dir,flist[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
summary.out.PT.IBWC = rbind(summary.out.PT.IBWC, obs.summary.PT.IBWC)
summary.out.gooddataonly = rbind(summary.out.gooddataonly, obs.summary) #only the usable data (A rating)
}
flist = c("figure_2.02_storm1_PT_2014_03_01_KTedits04172017.R",
"figure_2.07_storm2_PT_2015_03_01_KTedits04202017.R",
"figure_2.09_storm3_PT_2015_05_15_KTedits04202017.R",
"figure_2.11_storm4_PT_2015_09_15_KTedits04202017.R" ,
"figure_2.13_storm5_PT_2016_01_04_KTedits04172017.R" ,
"figure_2.15_storm6_PT_2016_03b_KTedits04172017.R" ,
"figure_2.17_storm7_PT_2016_04_KTedits04172017.R",
"figure_2.18_storm8_IBWC_Visual_2017_01_KTedits04172017.R",
"figure_2.19_storm9_IBWC_visual_2017_02_KTedits05012017.R",
"figure_2.20_storm10_IBWC_visual_2017_0227_KTedits05012017.R")
summary.out.PT.IBWC = data.frame(matrix(nrow=1, ncol=8)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(summary.out.PT.IBWC) <- c("date", "total.precip.mm", "PT.peak.q.obs.cms", "IBWC.peak.q.obs.cms", "PT.total.q.obs.mm", "IBWC.total.q.obs.mm", "event", "source")
summary.out.gooddataonly =  data.frame(matrix(nrow=1, ncol=6))
names(summary.out.gooddataonly) <- c("date", "total.precip.mm", "peak.q.obs.cms", "total.q.obs.mm", "event", "source")
for (i in 1:length(flist)) {
source(paste(script.dir,flist[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
summary.out.PT.IBWC = rbind(summary.out.PT.IBWC, obs.summary.PT.IBWC)
summary.out.gooddataonly = rbind(summary.out.gooddataonly, obs.summary) #only the usable data (A rating)
}
summary.out.PT.IBWC = data.frame(matrix(nrow=1, ncol=8)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(summary.out.PT.IBWC) <- c("date", "total.precip.mm", "PT.peak.q.obs.cms", "IBWC.peak.q.obs.cms", "PT.total.q.obs.mm", "IBWC.total.q.obs.mm", "event", "source")
summary.out.gooddataonly =  data.frame(matrix(nrow=1, ncol=6))
names(summary.out.gooddataonly) <- c("date", "total.precip.mm", "peak.q.obs.cms", "total.q.obs.mm", "event", "source")
for (i in 1:length(flist)) {
source(paste(script.dir,flist[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
summary.out.PT.IBWC = rbind(summary.out.PT.IBWC, obs.summary.PT.IBWC)
summary.out.gooddataonly = rbind(summary.out.gooddataonly, obs.summary) #only the usable data (A rating)
}
summary.out.gooddataonly
summary.out.PT.IBWC
runoff.coeff.ibwc = as.numeric(summary.out.PT.IBWC$IBWC.total.q.obs.mm)/as.numeric(summary.out.PT.IBWC$total.precip.mm)
runoff.coeff.PT = as.numeric(summary.out.PT.IBWC$PT.total.q.obs.mm)/as.numeric(summary.out.PT.IBWC$total.precip.mm)
#calculate the runoff coeff for the good data (usable observed A rating data)
runoff.coeff.obs = as.numeric(summary.out.gooddataonly$total.q.obs.mm)/as.numeric(summary.out.gooddataonly$total.precip.mm)
summary.PT.IBWC = cbind(summary.out.PT.IBWC[2:length(summary.out.PT.IBWC$date),], runoff.coeff.PT[2:length(runoff.coeff.PT)], runoff.coeff.ibwc[2:length(runoff.coeff.ibwc)])
names(summary.PT.IBWC) <- c("date", "total.precip.mm", "PT.peak.q.obs.cms", "IBWC.peak.q.obs.cms", "PT.total.q.obs.mm", "IBWC.total.q.obs.mm", "event", "source","runoff.coeff.PT","runoff.coeff.ibwc")
summary.obs.data = cbind(summary.out.gooddataonly[2:length(summary.out.gooddataonly$date),], runoff.coeff.obs[2:length(runoff.coeff.obs)])
names(summary.obs.data) <- c("date", "total.precip.mm", "peak.q.obs.cms", "total.q.obs.mm", "event", "source", "runoff.coeff")
summary.PT.IBWC
summary.obs.data
flist = c("figure_2.02_storm1_PT_2014_03_01_KTedits04172017.R",
"figure_2.07_storm2_PT_2015_03_01_KTedits04202017.R",
"figure_2.09_storm3_PT_2015_05_15_KTedits04202017.R",
"figure_2.11_storm4_PT_2015_09_15_KTedits04202017.R" ,
"figure_2.13_storm5_PT_2016_01_04_KTedits04172017.R" ,
"figure_2.15_storm6_PT_2016_03b_KTedits04172017.R" ,
"figure_2.18_storm8_IBWC_Visual_2017_01_KTedits04172017.R",
"figure_2.19_storm9_IBWC_visual_2017_02_KTedits05012017.R",
"figure_2.20_storm10_IBWC_visual_2017_0227_KTedits05012017.R")
###############################################################################################################
#Loop to run each R events script and pull out the summary tables: obs.summary.PT.IBWC and obs.summary
summary.out.PT.IBWC = data.frame(matrix(nrow=1, ncol=8)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(summary.out.PT.IBWC) <- c("date", "total.precip.mm", "PT.peak.q.obs.cms", "IBWC.peak.q.obs.cms", "PT.total.q.obs.mm", "IBWC.total.q.obs.mm", "event", "source")
summary.out.gooddataonly =  data.frame(matrix(nrow=1, ncol=6))
names(summary.out.gooddataonly) <- c("date", "total.precip.mm", "peak.q.obs.cms", "total.q.obs.mm", "event", "source")
for (i in 1:length(flist)) {
source(paste(script.dir,flist[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
summary.out.PT.IBWC = rbind(summary.out.PT.IBWC, obs.summary.PT.IBWC)
summary.out.gooddataonly = rbind(summary.out.gooddataonly, obs.summary) #only the usable data (A rating)
}
###############################################################################################################
#calculate runoff coeff for IBWC and PT datasets
runoff.coeff.ibwc = as.numeric(summary.out.PT.IBWC$IBWC.total.q.obs.mm)/as.numeric(summary.out.PT.IBWC$total.precip.mm)
runoff.coeff.PT = as.numeric(summary.out.PT.IBWC$PT.total.q.obs.mm)/as.numeric(summary.out.PT.IBWC$total.precip.mm)
#calculate the runoff coeff for the good data (usable observed A rating data)
runoff.coeff.obs = as.numeric(summary.out.gooddataonly$total.q.obs.mm)/as.numeric(summary.out.gooddataonly$total.precip.mm)
###############################################################################################################
#New summary tables
summary.PT.IBWC = cbind(summary.out.PT.IBWC[2:length(summary.out.PT.IBWC$date),], runoff.coeff.PT[2:length(runoff.coeff.PT)], runoff.coeff.ibwc[2:length(runoff.coeff.ibwc)])
names(summary.PT.IBWC) <- c("date", "total.precip.mm", "PT.peak.q.obs.cms", "IBWC.peak.q.obs.cms", "PT.total.q.obs.mm", "IBWC.total.q.obs.mm", "event", "source","runoff.coeff.PT","runoff.coeff.ibwc")
summary.obs.data = cbind(summary.out.gooddataonly[2:length(summary.out.gooddataonly$date),], runoff.coeff.obs[2:length(runoff.coeff.obs)])
names(summary.obs.data) <- c("date", "total.precip.mm", "peak.q.obs.cms", "total.q.obs.mm", "event", "source", "runoff.coeff")
###############################################################################################################
getwd() #the directory where the script is saved
setwd('../EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
###############################################################################################################
#Read in the tables generated from Table2.1_cal_generate.R and all of the events scripts
table.ibwc.pt = read.csv("summary_table_PT_IBWC_allevents.csv") #table with both IBWC and PT data
###############################################################################################################
table.ibwc.pt.df = data.frame(as.character(table.ibwc.pt[,1]), as.numeric(table.ibwc.pt[,2]), as.numeric(table.ibwc.pt[,3]), as.numeric(table.ibwc.pt[,4]), as.numeric(table.ibwc.pt[,5]), as.numeric(table.ibwc.pt[,6]), as.character(table.ibwc.pt[,7]), as.character(table.ibwc.pt[,8]), as.numeric(table.ibwc.pt[,9]), as.numeric(table.ibwc.pt[,10])) #in order to round, must be dataframe, create fake dataframe to round
#Round the values
round1 = txtRound(table.ibwc.pt.df[,2:6],2) #round the numeric columns
round2 = txtRound(table.ibwc.pt.df[,9:10],2) #round the numeric columns
table.2.1.PT.IBWC = data.frame(cbind(as.character(table.ibwc.pt.df[,1]), round1, round2, as.character(table.ibwc.pt.df[,7]), as.character(table.ibwc.pt.df[,8])))
names(table.2.1.PT.IBWC) <- c("Event Date", "Total Precip. (mm)", "PT.peak.q.obs.cms", "IBWC.peak.q.obs.cms", "PT.total.q.obs.mm", "IBWC.total.q.obs.mm","runoff.coeff.PT","runoff.coeff.ibwc", "event", "source")
library(htmlTable)
table.ibwc.pt.df = data.frame(as.character(table.ibwc.pt[,1]), as.numeric(table.ibwc.pt[,2]), as.numeric(table.ibwc.pt[,3]), as.numeric(table.ibwc.pt[,4]), as.numeric(table.ibwc.pt[,5]), as.numeric(table.ibwc.pt[,6]), as.character(table.ibwc.pt[,7]), as.character(table.ibwc.pt[,8]), as.numeric(table.ibwc.pt[,9]), as.numeric(table.ibwc.pt[,10])) #in order to round, must be dataframe, create fake dataframe to round
#Round the values
round1 = txtRound(table.ibwc.pt.df[,2:6],2) #round the numeric columns
round2 = txtRound(table.ibwc.pt.df[,9:10],2) #round the numeric columns
table.2.1.PT.IBWC = data.frame(cbind(as.character(table.ibwc.pt.df[,1]), round1, round2, as.character(table.ibwc.pt.df[,7]), as.character(table.ibwc.pt.df[,8])))
names(table.2.1.PT.IBWC) <- c("Event Date", "Total Precip. (mm)", "PT.peak.q.obs.cms", "IBWC.peak.q.obs.cms", "PT.total.q.obs.mm", "IBWC.total.q.obs.mm","runoff.coeff.PT","runoff.coeff.ibwc", "event", "source")
#set the text columns as as.character
table.2.1.PT.IBWC[,1] <- as.character(table.ibwc.pt.df[,1])
table.2.1.PT.IBWC[,9] <- as.character(table.ibwc.pt.df[,7]) #changed order of source and event to the end
table.2.1.PT.IBWC[,10] <- as.character(table.ibwc.pt.df[,8]) #changed order of source and event to the end
table.2.1.PT.IBWC
table.ibwc.pt
getwd() #the directory where the script is saved
table.ibwc.pt = read.csv("summary_table_PT_IBWC_allevents.csv") #table with both IBWC and PT data
table.ibwc.pt
flist = c("figure_2.02_storm1_PT_2014_03_01_KTedits04172017.R",
"figure_2.07_storm2_PT_2015_03_01_KTedits04202017.R",
"figure_2.09_storm3_PT_2015_05_15_KTedits04202017.R",
"figure_2.11_storm4_PT_2015_09_15_KTedits04202017.R" ,
"figure_2.13_storm5_PT_2016_01_04_KTedits04172017.R" ,
"figure_2.15_storm6_PT_2016_03b_KTedits04172017.R" ,
"figure_2.18_storm8_IBWC_Visual_2017_01_KTedits04172017.R",
"figure_2.19_storm9_IBWC_visual_2017_02_KTedits05012017.R",
"figure_2.20_storm10_IBWC_visual_2017_0227_KTedits05012017.R")
summary.out.PT.IBWC = data.frame(matrix(nrow=1, ncol=8)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(summary.out.PT.IBWC) <- c("date", "total.precip.mm", "PT.peak.q.obs.cms", "IBWC.peak.q.obs.cms", "PT.total.q.obs.mm", "IBWC.total.q.obs.mm", "event", "source")
summary.out.gooddataonly =  data.frame(matrix(nrow=1, ncol=6))
names(summary.out.gooddataonly) <- c("date", "total.precip.mm", "peak.q.obs.cms", "total.q.obs.mm", "event", "source")
for (i in 1:length(flist)) {
source(paste(script.dir,flist[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
summary.out.PT.IBWC = rbind(summary.out.PT.IBWC, obs.summary.PT.IBWC)
summary.out.gooddataonly = rbind(summary.out.gooddataonly, obs.summary) #only the usable data (A rating)
}
runoff.coeff.ibwc = as.numeric(summary.out.PT.IBWC$IBWC.total.q.obs.mm)/as.numeric(summary.out.PT.IBWC$total.precip.mm)
runoff.coeff.PT = as.numeric(summary.out.PT.IBWC$PT.total.q.obs.mm)/as.numeric(summary.out.PT.IBWC$total.precip.mm)
#calculate the runoff coeff for the good data (usable observed A rating data)
runoff.coeff.obs = as.numeric(summary.out.gooddataonly$total.q.obs.mm)/as.numeric(summary.out.gooddataonly$total.precip.mm)
###############################################################################################################
#New summary tables
summary.PT.IBWC = cbind(summary.out.PT.IBWC[2:length(summary.out.PT.IBWC$date),], runoff.coeff.PT[2:length(runoff.coeff.PT)], runoff.coeff.ibwc[2:length(runoff.coeff.ibwc)])
names(summary.PT.IBWC) <- c("date", "total.precip.mm", "PT.peak.q.obs.cms", "IBWC.peak.q.obs.cms", "PT.total.q.obs.mm", "IBWC.total.q.obs.mm", "event", "source","runoff.coeff.PT","runoff.coeff.ibwc")
summary.obs.data = cbind(summary.out.gooddataonly[2:length(summary.out.gooddataonly$date),], runoff.coeff.obs[2:length(runoff.coeff.obs)])
names(summary.obs.data) <- c("date", "total.precip.mm", "peak.q.obs.cms", "total.q.obs.mm", "event", "source", "runoff.coeff")
###############################################################################################################
#Export new tables into .csv
fname.pt.ibwc = "summary_table_PT_IBWC_allevents.csv"
write.csv(summary.PT.IBWC, file=fname.pt.ibwc, row.names=F)
fname.obs = "summary_table_obs_allevents.csv"
write.csv(summary.obs.data , file=fname.obs, row.names=F)
#see table.2.1_cal_format.R for html formatting of table in report
summary.PT.IBWC
summary.obs.data
table.ibwc.pt = read.csv("summary_table_PT_IBWC_allevents.csv") #table with both IBWC and PT data
table.ibwc.pt
table.ibwc.pt.df = data.frame(as.character(table.ibwc.pt[,1]), as.numeric(table.ibwc.pt[,2]), as.numeric(table.ibwc.pt[,3]), as.numeric(table.ibwc.pt[,4]), as.numeric(table.ibwc.pt[,5]), as.numeric(table.ibwc.pt[,6]), as.character(table.ibwc.pt[,7]), as.character(table.ibwc.pt[,8]), as.numeric(table.ibwc.pt[,9]), as.numeric(table.ibwc.pt[,10])) #in order to round, must be dataframe, create fake dataframe to round
#Round the values
round1 = txtRound(table.ibwc.pt.df[,2:6],2) #round the numeric columns
round2 = txtRound(table.ibwc.pt.df[,9:10],2) #round the numeric columns
table.2.1.PT.IBWC = data.frame(cbind(as.character(table.ibwc.pt.df[,1]), round1, round2, as.character(table.ibwc.pt.df[,7]), as.character(table.ibwc.pt.df[,8])))
names(table.2.1.PT.IBWC) <- c("Event Date", "Total Precip. (mm)", "PT.peak.q.obs.cms", "IBWC.peak.q.obs.cms", "PT.total.q.obs.mm", "IBWC.total.q.obs.mm","runoff.coeff.PT","runoff.coeff.ibwc", "event", "source")
table.2.1.PT.IBWC
table.2.1.PT.IBWC[,1] <- as.character(table.ibwc.pt.df[,1])
table.2.1.PT.IBWC[,9] <- as.character(table.ibwc.pt.df[,7]) #changed order of source and event to the end
table.2.1.PT.IBWC[,10] <- as.character(table.ibwc.pt.df[,8]) #changed order of source and event to the end
table.2.1.PT.IBWC.tableout = htmlTable(table.2.1.PT.IBWC,
rnames = rep("", times=length(table.ibwc.pt.df[,1])), #no row names
header = c("", "", "PT", "IBWC", "PT", "IBWC", "PT", "IBWC", "", ""),
cgroup = c("Event Date*", "Rainfall (mm)", "Peak Discharge (cms)", "Total Runoff (mm)","Runoff Ratio (Q/P)", "Event", "Source"),
n.cgroup = c(1, 1, 2, 2, 2, 1, 1),
rgroup=c("Storm 1","Storm 2","Storm 3","Storm 4","Storm 5","Storm 6","Storm 8","Storm 9","Storm 10"),
n.rgroup=c(3,2,1,1,1,2,2,1,1),
caption="Table 2.2 Summary of storm events defined in Table 2. Source refers to which dataset was used as the final observed data.")
print(table.2.1.PT.IBWC.tableout)
table.obs = read.csv("summary_table_obs_allevents.csv") #table with just the usable observed data (A Rating) and used as observed in comparison with simulated results
#calculate total discharge in MCM calculation for the table!
total.q.obs.MCM = (table.obs$total.q.obs.mm/1000*10231811.9)/1000000 #from mm to m3 to million m3
table.obs.df = data.frame(as.character(table.obs[,1]), as.numeric(table.obs[,2]), as.numeric(table.obs[,3]), as.numeric(table.obs[,4]), as.numeric(total.q.obs.MCM), as.numeric(table.obs[,7]), as.character(table.obs[,5]),  as.character(table.obs[,6])) #in order to round, must be dataframe, create fake dataframe to round
round1 = txtRound(table.obs.df[,2:6], 2) #round the numeric columns to 2 digits, use round1[,1:3] and round1[,5]
round2 = txtRound(table.obs.df[,5:6], 3) #total q MCM needs to be rounded to 3 digits: round2[,1]
table.2.1.obs = data.frame(cbind(as.character(table.obs.df[,1]), round1[,1:3], as.numeric(round2[,1]), as.numeric(round1[,5]), as.character(table.obs.df[,7]), as.character(table.obs.df[,8])))
names(table.2.1.obs) <- c("Event Date", "Total Precip. (mm)", "Peak.q.obs.cms", "Total.q.obs.mm", "Total.q.obs.MCM","runoff.coeff", "event", "source")
#set the text columns as as.character, was getting reformatted and not displaying correctly without doing so
table.2.1.obs[,1] <- as.character(table.obs.df[,1])
table.2.1.obs[,7] <- as.character(table.obs.df[,7])
table.2.1.obs[,8] <- as.character(table.obs.df[,8])
table.2.1.obs = data.frame(cbind(as.character(table.obs.df[,1]), round1[,1:3], as.numeric(round2[,1]), as.numeric(round1[,5]), as.character(table.obs.df[,7]), as.character(table.obs.df[,8])))
names(table.2.1.obs) <- c("Event Date", "Total Precip. (mm)", "Peak.q.obs.cms", "Total.q.obs.mm", "Total.q.obs.MCM","runoff.coeff", "event", "source")
#set the text columns as as.character, was getting reformatted and not displaying correctly without doing so
table.2.1.obs[,1] <- as.character(table.obs.df[,1])
table.2.1.obs[,7] <- as.character(table.obs.df[,7])
table.2.1.obs[,8] <- as.character(table.obs.df[,8])
#HTML Table
table.2.1.obs.tableout = htmlTable(table.2.1.obs,
rnames = rep("", times=length(table.obs.df[,1])), #no row names
header = c("", "", "Obs", "Obs (mm)", "Obs (MCM)", "Obs","", ""),
cgroup = c("Event Date*", "Rainfall (mm)", "Peak Discharge (cms)", "Total Runoff","Runoff Ratio (Q/P)", "Event", "Source"),
n.cgroup = c(1, 1, 1, 2, 1, 1, 1),
rgroup=c("Storm 1","Storm 2","Storm 3","Storm 4","Storm 5","Storm 6","Storm 8","Storm 9","Storm 10"),
n.rgroup=c(3,2,1,1,1,2,2,1,1),
caption="Table 2.3 Summary of storm events defined in Table 2, final observed data (obs) used for calibration/validation.")
print(table.2.1.obs.tableout)
flist2 = c("Figure_3.2_EventsReport_SSC_03012014.R",
"Figure_3.3_EventsReport_SSC_03012015.R",
"Figure_3.4_EventsReport_SSC_05152015.R",
"Figure_3.5_EventsReport_SSC_03062016.R",
"Figure_3.6_EventsReport_SSC_02172017.R",
"Figure_3.7_EventsReport_SSC_02272017.R")
table.3.1.out = data.frame(matrix(nrow=1, ncol=4)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(table.3.1.out) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3.out =  data.frame(matrix(nrow=1, ncol=6))
names(table.3.3.out) <- c("event.date", "total.q.mm", "total.q.m3", "load.ton", "VWM", "EMC")
Storm.out = NA
for (i in 1:length(flist)) {
source(paste(script.dir,flist[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
EMC.out = c("EMC", EMC, "","")
table.3.1.out = rbind(table.3.1.out, table.3.1.export, EMC.out)
table.3.3.out = rbind(table.3.3.out, table.3.3.export) #only the usable data (A rating)
Storm.out = c(Storm.out, storm)
}
EMC.out
i=1
source(paste(script.dir,flist[i], sep = ""))
EMC.out = c("EMC", EMC, "","")
script.dir= '../EPA_Events_Report_TJ_LLCW_Scripts/' #directory where scripts are saved
getwd() #the directory where the script is saved
script.dir
flist2 = c("Figure_3.2_EventsReport_SSC_03012014.R",
"Figure_3.3_EventsReport_SSC_03012015.R",
"Figure_3.4_EventsReport_SSC_05152015.R",
"Figure_3.5_EventsReport_SSC_03062016.R",
"Figure_3.6_EventsReport_SSC_02172017.R",
"Figure_3.7_EventsReport_SSC_02272017.R")
table.3.1.out = data.frame(matrix(nrow=1, ncol=4)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(table.3.1.out) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3.out =  data.frame(matrix(nrow=1, ncol=6))
names(table.3.3.out) <- c("event.date", "total.q.mm", "total.q.m3", "load.ton", "VWM", "EMC")
Storm.out = NA
i=1
source(paste(script.dir,flist[i], sep = ""))
table.3.1.out = data.frame(matrix(nrow=1, ncol=4)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(table.3.1.out) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3.out =  data.frame(matrix(nrow=1, ncol=6))
names(table.3.3.out) <- c("event.date", "total.q.mm", "total.q.m3", "load.ton", "VWM", "EMC")
Storm.out = NA
source(paste(script.dir,flist2[i], sep = ""))
EMC.out = c("EMC", EMC, "","")
table.3.1.out = rbind(table.3.1.out, table.3.1.export, EMC.out)
table.3.3.out = rbind(table.3.3.out, table.3.3.export) #only the usable data (A rating)
Storm.out = c(Storm.out, storm)
EMC.out
table.3.1.out = data.frame(matrix(nrow=1, ncol=4)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(table.3.1.out) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3.out =  data.frame(matrix(nrow=1, ncol=6))
names(table.3.3.out) <- c("event.date", "total.q.mm", "total.q.m3", "load.ton", "VWM", "EMC")
Storm.out = NA
for (i in 1:length(flist)) {
source(paste(script.dir,flist2[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
EMC.out = c("EMC", EMC, "","")
table.3.1.out = rbind(table.3.1.out, table.3.1.export, EMC.out)
table.3.3.out = rbind(table.3.3.out, table.3.3.export) #only the usable data (A rating)
Storm.out = c(Storm.out, storm)
}
table.3.1.out = data.frame(matrix(nrow=1, ncol=4)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(table.3.1.out) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3.out =  data.frame(matrix(nrow=1, ncol=6))
names(table.3.3.out) <- c("event.date", "total.q.mm", "total.q.m3", "load.ton", "VWM", "EMC")
Storm.out = NA
for (i in 1:length(flist2)) {
source(paste(script.dir,flist2[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
EMC.out = c("EMC", EMC, "","")
table.3.1.out = rbind(table.3.1.out, table.3.1.export, EMC.out)
table.3.3.out = rbind(table.3.3.out, table.3.3.export) #only the usable data (A rating)
Storm.out = c(Storm.out, storm)
}
EMC.out
table.3.1 = table.3.1.out[2:length(table.3.1.out$Date),]
table.3.1
table.3.3 = table.3.3.out[2:length(table.3.3.out$event.date),]
names(table.3.3) <- c("event.date", "total.q.mm", "total.q.m3", "load.ton", "VWM", "EMC")
Storm.out = Storm.out[2:length(Storm.out)]
Storm.out
fname.3.1 = "summary_table.3.1.csv"
write.csv(table.3.1, file=fname.3.1, row.names=F)
fname.3.3 = "summary_table.3.3.csv"
write.csv(table.3.3 , file=fname.3.3, row.names=F)
#see table.3.1_cal_format.R for html formatting of table in report
table.3.1.ssc = read.csv("summary_table.3.1.csv") #table with both IBWC and PT data
table.3.1.ssc.df = data.frame(table.3.1.ssc)
#Round the values
round1 = txtRound(table.3.1.ssc.df[,2:3],2) #round the numeric columns
table.3.1.final = data.frame(cbind(as.character(table.3.1.ssc.df[,1]), round1[,1], round1[,2], as.character(table.3.1.ssc.df[,4])))
names(table.3.1.final) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
#set the text columns as as.character
table.3.1.final[,1] <- as.character(table.3.1.ssc.df[,1])
table.3.1.final[,2] <- as.character(table.3.1.final[,2])
table.3.1.final[,3] <- as.character(table.3.1.final[,3])
table.3.1.final[,4] <- as.character(table.3.1.ssc.df[,4])
table.3.1.SSC.tableout = htmlTable(table.3.1.final,
rnames = rep("", times=length(table.3.1.ssc.df[,1])), #no row names
header = c("Date", "SSC (g/L)", "Q (cms)", "Event"),
rgroup= c("Storm 1",  "Storm 2",  "Storm 3",  "Storm 6",  "Storm 9",  "Storm 10"),
n.rgroup=c(3,5,2,7,4,2),
caption="Table 3.1.  Suspended sediment concentration (SSC) for all collected samples.  EMC is the event-mean concentration.")
print(table.3.1.SSC.tableout)
table.3.3.ssc = read.csv("summary_table.3.3.csv") #table with both IBWC and PT data
table.3.3.ssc.df = data.frame(table.3.3.ssc)
#Round the values
round1 = txtRound(table.3.3.ssc.df[,2:6],2) #round the numeric columns
round2 = round(table.3.3.ssc.df[,3],0)
round3 = round(table.3.3.ssc.df[,4],1)
#load.round = signif(table.3.3.ssc.df[,4], 3)
table.3.3.final = data.frame(cbind(as.character(table.3.3.ssc.df[,1]), round1[,1], round2, round3, round1[,4], round1[,5]))
names(table.3.3.final) <- c("Event Date*", "Total Q (mm) ", "Total Q (m3)", "Load (tons)", "Volume weighted mean concentration (g/L)", "EMC")
#set the text columns as as.character
table.3.3.final[,1] <- as.character(table.3.3.final[,1])
table.3.3.final[,2] <- as.character(table.3.3.final[,2])
table.3.3.final[,3] <- as.character(table.3.3.final[,3])
table.3.3.final[,4] <- as.character(table.3.3.final[,4])
table.3.3.final[,5] <- as.character(table.3.3.final[,5])
table.3.3.final[,6] <- as.character(table.3.3.final[,6])
table.3.3.SSC.tableout = htmlTable(table.3.3.final,
rnames = rep("", times=length(table.3.3.ssc.df[,1])), #no row names
header = c("", "mm", "m3", "tons", "g/L", "g/L"),
cgroup = c("Event Date*", "Total Q", "Load", "Volume weighted mean concentration", "Event Mean Concentration"),
n.cgroup = c(1, 2, 1, 1,1),
caption="Table 3.3.  Total event suspended sediment load at the PT location for the events with SSC data. Drainage area is 10.23 km2 at the observation point.")
print(table.3.3.SSC.tableout)
source('../EPA_Events_Report_TJ_LLCW_Scripts/function_water_year.R ') #functions are saved in script directory
table.3.3.ssc = read.csv("summary_table.3.1.csv") #table with both IBWC and PT data
table.3.1.ssc = read.csv("summary_table.3.1.csv") #table with both IBWC and PT data
table.3.1.ssc
table.3.1.ssc = table.3.1.ssc.all[-c(3,8,10,17,21,23),]
table.3.1.ssc.all = read.csv("summary_table.3.1.csv") #table with both IBWC and PT data
table.3.1.ssc = table.3.1.ssc.all[-c(3,8,10,17,21,23),]
table.3.1.ssc
names(table.3.1.ssc.all)
names(table.3.1.ssc) <- c("Date","SSC.g.L.", "Q.cms.", "Event")  #set column names
table.3.1.ssc[,2] <- as.numeric(as.character(table.3.1.ssc[,2]))
table.3.1.ssc[,3] <- as.numeric(as.character(table.3.1.ssc[,3]))
names(table.3.1.ssc) <- c("Date","SSC.g.L.", "Q.cms.", "Event")  #set column names
table.3.1.ssc
names(table.3.1.ssc) <- c("Date","SSC.g.L", "Q.cms.", "Event")  #set column names
names(table.3.1.ssc) <- c("Date","SSC.g.L", "Q.cms", "Event")  #set column names
table.3.1.ssc
table.3.3.ssc = read.csv("summary_table.3.3.csv") #table with both IBWC and PT data
#set value columns to numeric, create new dataframe to run regression
table.3.3.ssc[,2] <- as.numeric(as.character(table.3.3.ssc[,2]))
table.3.3.ssc[,3] <- as.numeric(as.character(table.3.3.ssc[,3]))
table.3.3.ssc[,4] <- as.numeric(as.character(table.3.3.ssc[,4]))
table.3.3.ssc[,5] <- as.numeric(as.character(table.3.3.ssc[,5]))
table.3.3.ssc[,6] <- as.numeric(as.character(table.3.3.ssc[,6]))
names(table.3.3.ssc) <- c("event.date", "total.q.mm", "total.q.m3", "load.ton", "VWM", "EMC")  #set column names
q.ssc.model = lm(log10(EMC) ~ log10(total.q.mm), table.3.3.ssc) #log-log
summary(q.ssc.model)
b = as.numeric(q.ssc.model$coefficients[1]) #y-int
table.3.1.ssc
q.ssc.model = lm(log10(SSC.g.L) ~ log10(Q.cms), table.3.1.ssc) #log-log
rawq.ssc.model = lm(SSC.g.L ~ Q.cms, table.3.1.ssc)
summary(q.srawq.ssc.modelsc.model)
q.srawq.ssc.modelsc.model
summary(rawq.ssc.model)
b = as.numeric(q.ssc.model$coefficients[1]) #y-int
x.num = c(0.1, 50)
y.num =  a*x.num+b         #y = 10^b*x^a , y = 4.77*x^0.45
reg.q.rawSSC = data.frame(cbind(x.num, y.num))
plot(as.numeric(table.3.1.ssc$Q.cms), as.numeric(table.3.1.ssc$SSC.g.L),  pch=16, cex = 1.5, ylab="Grab Sample SSC (g/L)", xlab = "Instantaneous Q (cms)")
plot(as.numeric(table.3.1.ssc$Q.cms), as.numeric(table.3.1.ssc$SSC.g.L), log="xy",  pch=16, cex = 1.5, ylab="Grab Sample SSC (g/L)", xlab = "Instantaneous Q (cms)")
plot(as.numeric(table.3.1.ssc$Q.cms), as.numeric(table.3.1.ssc$SSC.g.L),  pch=16, cex = 1.5, ylab="Grab Sample SSC (g/L)", xlab = "Instantaneous Q (cms)")
layout(matrix(1:3, ncol = 1), widths = 2, respect = FALSE)
par(mar = c(4, 4.1, 0, 0.1)) #set margins for bottom, L, top, R
plot(as.numeric(table.3.1.ssc$Q.cms), as.numeric(table.3.1.ssc$SSC.g.L),  pch=16, cex = 1.5, ylab="Grab Sample SSC (g/L)", xlab = "Instantaneous Q (cms)")
par(mar = c(4, 4.1, 0, 0.1)) #set margins for bottom, L, top, R
plot(as.numeric(table.3.3.ssc$total.q.mm), as.numeric(table.3.3.ssc$EMC), log="xy", pch=16, cex = 1.5, ylab="Event-mean SSC (g/L)", xlab = "Total Q (mm)")
lines(reg.q.EMC$x.num, reg.q.EMC$y.num)
text.eq1 = expression("y = 4.77"~ x^{0.45}) #equation text to be added to plot
text(20, 10, text.eq1) #add equation to
par(mar = c(4, 4.1, 1, 0.1)) #set margins for bottom, L, top, R
plot(as.numeric(table.3.3.ssc$total.q.mm), as.numeric(table.3.3.ssc$load.ton), log="xy", pch=16, cex = 1.5,ylab="Suspended Sediment Load (tons)", xlab = "Total Q (mm)")
lines(reg.q.load$x.num, reg.q.load$y.num)
text.eq2 = expression("y = 51.47"~ x^{1.52}) #equation text to be added to plot
text(20, 2000, text.eq2)
#Regression equation for Q-Event mean ssc (EMC) relationship
q.ssc.model = lm(log10(EMC) ~ log10(total.q.mm), table.3.3.ssc) #log-log
summary(q.ssc.model)
b = as.numeric(q.ssc.model$coefficients[1]) #y-int
a = as.numeric(q.ssc.model$coefficients[2]) #slope
x.num = c(0.1, 50)
y.num =  (10^b)*(x.num^a)         #y = 10^b*x^a , y = 4.77*x^0.45
reg.q.EMC = data.frame(cbind(x.num, y.num))
#Regression equation for Q-Load relationship
q.load.model = lm(log10(load.ton) ~ log10(total.q.mm), table.3.3.ssc) #log-log
summary(q.load.model)
b = as.numeric(q.load.model$coefficients[1]) #y-int
a = as.numeric(q.load.model$coefficients[2]) #slope
x.num = c(0.1, 50)
y.num =  (10^b)*(x.num^a)         #y = 10^b*x^a , y = 51.47*x^1.52
reg.q.load = data.frame(cbind(x.num, y.num))
layout(matrix(1:3, ncol = 1), widths = 2, respect = FALSE)
par(mar = c(4, 4.1, 0, 0.1)) #set margins for bottom, L, top, R
plot(as.numeric(table.3.1.ssc$Q.cms), as.numeric(table.3.1.ssc$SSC.g.L),  pch=16, cex = 1.5, ylab="Grab Sample SSC (g/L)", xlab = "Instantaneous Q (cms)")
par(mar = c(4, 4.1, 0, 0.1)) #set margins for bottom, L, top, R
plot(as.numeric(table.3.3.ssc$total.q.mm), as.numeric(table.3.3.ssc$EMC), log="xy", pch=16, cex = 1.5, ylab="Event-mean SSC (g/L)", xlab = "Total Q (mm)")
lines(reg.q.EMC$x.num, reg.q.EMC$y.num)
text.eq1 = expression("y = 4.77"~ x^{0.45}) #equation text to be added to plot
text(20, 10, text.eq1) #add equation to
par(mar = c(4, 4.1, 1, 0.1)) #set margins for bottom, L, top, R
plot(as.numeric(table.3.3.ssc$total.q.mm), as.numeric(table.3.3.ssc$load.ton), log="xy", pch=16, cex = 1.5,ylab="Suspended Sediment Load (tons)", xlab = "Total Q (mm)")
lines(reg.q.load$x.num, reg.q.load$y.num)
text.eq2 = expression("y = 51.47"~ x^{1.52}) #equation text to be added to plot
text(20, 2000, text.eq2)
layout(matrix(1:3, ncol = 1), widths = 2, respect = FALSE)
par(mar = c(4, 4.1, 0, 0.1)) #set margins for bottom, L, top, R
plot(as.numeric(table.3.1.ssc$Q.cms), as.numeric(table.3.1.ssc$SSC.g.L),  pch=16, cex = 1.5, ylab="Grab Sample SSC (g/L)", xlab = "Instantaneous Q (cms)")
par(mar = c(4, 4.1, 1, 0.1)) #set margins for bottom, L, top, R
plot(as.numeric(table.3.3.ssc$total.q.mm), as.numeric(table.3.3.ssc$EMC), log="xy", pch=16, cex = 1.5, ylab="Event-mean SSC (g/L)", xlab = "Total Q (mm)")
lines(reg.q.EMC$x.num, reg.q.EMC$y.num)
text.eq1 = expression("y = 4.77"~ x^{0.45}) #equation text to be added to plot
text(20, 10, text.eq1) #add equation to
par(mar = c(4, 4.1, 1, 0.1)) #set margins for bottom, L, top, R
plot(as.numeric(table.3.3.ssc$total.q.mm), as.numeric(table.3.3.ssc$load.ton), log="xy", pch=16, cex = 1.5,ylab="Suspended Sediment Load (tons)", xlab = "Total Q (mm)")
lines(reg.q.load$x.num, reg.q.load$y.num)
text.eq2 = expression("y = 51.47"~ x^{1.52}) #equation text to be added to plot
text(20, 2000, text.eq2)
